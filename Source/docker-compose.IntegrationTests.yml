# Docker compose for build pipeline

version: '3.8'

services:
  mock-register:
    container_name: mock-register
    image: mock-register
    hostname: mock-register
    ports: 
      - "7000:7000"
      - "7001:7001"
      - "7006:7006"
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    volumes:
      - "./_temp/mock-register/tmp:/tmp"      
    healthcheck:
      test: test -f /app/admin/_healthcheck_ready || exit 1
      timeout: 5s
      interval: 5s
      retries: 100
    depends_on:
      mssql:
        condition: service_healthy

  mock-data-holder:
    container_name: mock-data-holder
    image: mock-data-holder
    hostname: mock-data-holder
    ports: 
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
      - "8005:8005"
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    volumes:
      - "./_temp/mock-data-holder/tmp:/tmp"      
    healthcheck:
      test: test -f /app/manage/_healthcheck_ready || exit 1
      timeout: 5s
      interval: 5s
      retries: 100    
    depends_on:
      mssql:
        condition: service_healthy
      mock-register:
        condition: service_healthy

  mock-data-holder-energy:
    container_name: mock-data-holder-energy
    image: mock-data-holder-energy
    hostname: mock-data-holder-energy
    ports: 
      - "8100:8100"
      - "8101:8101"
      - "8102:8102"
      - "8105:8005"
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    volumes:
      - "./_temp/mock-data-holder-energy/tmp:/tmp"      
    healthcheck:
      test: test -f /app/manage/_healthcheck_ready || exit 1
      timeout: 5s
      interval: 5s
      retries: 100    
    depends_on:
      mssql:
        condition: service_healthy
      mock-register:
        condition: service_healthy
      mock-data-holder:
        condition: service_healthy

  mock-data-recipient:
    container_name: mock-data-recipient
    image: mock-data-recipient
    hostname: mock-data-recipient
    ports: 
      - "9001:9001"
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    volumes:
      - "./_temp/mock-data-recipient/tmp:/tmp"      
    healthcheck:
      test: test -f /app/web/_healthcheck_ready || exit 1
      timeout: 10s
      interval: 30s
      retries: 20
    depends_on:
      mock-data-holder-energy:
        condition: service_healthy

  mock-data-recipient-integration-tests:
    container_name: mock-data-recipient-integration-tests
    image: mock-data-recipient-integration-tests
    build:
      context: .
      dockerfile: Dockerfile.integration-tests
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    volumes:
      - "./_temp/mock-data-recipient-integration-tests/tmp:/tmp"   
      - "./_temp/mock-data-recipient-integration-tests/testresults:/testresults"
    depends_on:
      mock-data-recipient:
        condition: service_healthy

  mssql:
    container_name: sql1
    image: 'mcr.microsoft.com/mssql/server:2019-latest'
    ports: 
      - "1433:1433"
      - "9933:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Pa{}w0rd2019
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S . -U sa -P "Pa{}w0rd2019" -Q "SELECT 1" || exit 1 
      timeout: 10s
      interval: 10s
      retries: 30    
