@{
    ViewData["Title"] = "Consent and Authorisation";
}
@model ConsentModel

<h2>Consent and Authorisation</h2>

<p>This page allows you to use the Mock Data Recipient to commence the consent and authorisation flow with a data holder that you have successfully performed DCR with.</p>
<p>The outcome of the consent and authorisation process will be an access token that can then be used for consumer data sharing.</p>

<div class="alert alert-info" role="alert">
    <h4 class="alert-heading">FAPI 1.0 Adoption</h4>
    <p>
        Due to our implementation of FAPI 1.0 Migration Phase 2 (requiring the use of PAR and PKCE),
        <em>Consent and Authorisation</em> will <strong>NOT WORK</strong> when making consents with our
        Energy Mock Data Holder and any other Data Holder that has implemented FAPI 1.0 Phase 2.
        Use <em>PAR</em> to create these consents instead.
    </p>
    <hr>
    <p class="mb-0">For Data Holders that have not yet implemented FAPI 1.0 Phase 2, <em>Consent and Authorisation</em> can still be used but are advised to use <em>PAR</em>.</p>
</div>


<br />
<div class="row">
    <div class="card">
        <h5 class="card-header">Initiate Authorisation</h5>
        <div class="card-body">
            <h5 class="card-title">Initiate the authorisation flow with the selected Data Holder</h5>
            <div class="card-text">

                @using (Html.BeginForm())
                {
                    @Html.HiddenFor(m => m.RedirectUris)

                    <div class="form">
                        <div class="row mb-3">
                            @Html.LabelFor(m => m.RegistrationId, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.DropDownListFor(m => m.RegistrationId, Model.RegistrationListItems, "Select registration...", new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            @Html.LabelFor(m => m.SharingDuration, "SharingDuration (in Seconds)", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.SharingDuration, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            @Html.LabelFor(m => m.Scope, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.Scope, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-10 offset-sm-2">
                                <div class="form-check  mb-3">
                                    @Html.CheckBoxFor(m => m.UsePkce, new { @class = "form-check-input" })
                                    @Html.LabelFor(m => m.UsePkce, new { @class = "form-check-label" })
                                </div>
                            </div>
                        </div>

                        <div class="row mb-3 buttons">
                            <div class="col-sm-10 offset-sm-2">
                                <input name="get-auth-uri" type="submit" value="Construct Authorisation URI" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }

            </div>
            <p class="results">
                @if (!string.IsNullOrEmpty(Model.AuthorisationUri))
                {
                    <a href="@Model.AuthorisationUri">@Model.AuthorisationUri</a>
                }
            </p>
        </div>
        <div class="card-footer">
            <small class="text-muted">@Model.Messages</small>
        </div>
    </div>
</div>

<div id="modal-consent" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Consent</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="modal-messages"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script type="text/javascript">
    $(document).ready(function () {
        var modal = new bootstrap.Modal(document.getElementById('modal-consent'), {
            keyboard: false
        });

        // Populate the view with the picked details
		$('#RegistrationId').click(function () {
			var registrationId = $('#RegistrationId option:selected').val();
			if (registrationId !== null && registrationId !== '') {
                $.ajax({
                    url: '/consent/registration/detail',
                    type: 'POST',
                    data: {
						registrationId: registrationId
                    },
                    success: function (result) {
                        if (result.message !== '') {
                            $('#modal-messages').html(result.message);
                        } else {
                            $('#RedirectUris').val(result.redirectUris);
                            $('#Scope').val(result.scope);
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        modal.show();
                        $('#modal-messages').html('error');
                    }
                });
            }
            return false;
        });

        setSidebarMenuItem('consent');
    });
</script>
}
