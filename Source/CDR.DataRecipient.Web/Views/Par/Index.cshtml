@{
    ViewData["Title"] = "Pushed Authorisation Request";
}
@model ParModel

<h2>Pushed Authorisation Request (PAR)</h2>

<p>This page allows you to use the Mock Data Recipient to commence the PAR process with a data holder.</p>  
<p>The outcome of this process will be an access token that can then be used for consumer data sharing.</p>


<br/> 
<div class="card">
    <h5 class="card-header">Initiate PAR with the selected Data Holder</h5>
    <div class="card-body">
        <div class="card-text">

            @using (Html.BeginForm())
            {
                <div class="form">
                    <div class="row mb-3">
                        @Html.LabelFor(m => m.RegistrationId, new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.DropDownListFor(m => m.RegistrationId, Model.RegistrationListItems, "Select registration...", new { @class = "form-control" })
                            <div id="registrationid-validation-message">
                                @Html.ValidationMessageFor(model => model.RegistrationId, "", new {@class = "text-danger"})
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3 buttons">
                        <div class="col-sm-10 offset-sm-2">
                            <input id="ViewRegistration" name="view-registration" type="button" value="View Registration" class="btn btn-primary" />
                            <div id="registration-spinner" class="spinner-border spinner-border-sm text-primary"><span class="visually-hidden">Loading...</span></div>
                        </div>
                    </div>

                    <div id="arrdetail">
                        <div class="row mb-3">
                            @Html.LabelFor(m => m.CdrArrangementId, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.DropDownListFor(m => m.CdrArrangementId, Model.ConsentArrangementListItems, "Create new arrangement", new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            @Html.LabelFor(m => m.SharingDuration, "SharingDuration (in Seconds)", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.SharingDuration, new { @class = "form-control" })
                                <small><i>* Maximum Sharing Period is 12 months</i></small>
                            </div>
                        </div>

                        <div class="row mb-3">
                            @Html.LabelFor(m => m.Scope, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.Scope, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-sm-10 offset-sm-2">
                                <div class="form-check  mb-3">
                                    @Html.CheckBoxFor(m => m.UsePkce, new { @class = "form-check-input" })
                                    @Html.LabelFor(m => m.UsePkce, new { @class = "form-check-label" })
                                </div>
                            </div>
                        </div>

                        <div class="row mb-3">
                            @Html.LabelFor(m => m.ResponseType, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.ResponseType, new { @class = "form-control" })
                                <small><i>* As per CDS v1.33.0, OIDC Hybrid Flow is now retired and Authorisation Code Flow must be supported.</i></small>
                            </div>
                        </div>

                        <div class="row mb-3">
                            @Html.LabelFor(m => m.ResponseMode, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.ResponseMode, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="row mb-3 buttons">
                            <div class="col-sm-10 offset-sm-2">
                                <input name="get-auth-uri" type="submit" value="Initiate PAR" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>
        <p class="results">
            @if (!string.IsNullOrEmpty(Model.AcfOnlyErrorMessage))
            {
                <br />
                <p class="text-danger">@Model.AcfOnlyErrorMessage</p>
            }

            @if (!string.IsNullOrEmpty(Model.AuthorisationUri))
            {
                <a href="@Model.AuthorisationUri">@Model.AuthorisationUri</a>
            }

            @if (Model.PushedAuthorisation != null)
            {
                <dl>
                    <dt>request_uri</dt>
                    <dd>@Model.PushedAuthorisation.RequestUri</dd>
                    <dt>expires_in</dt>
                    <dd>@Model.PushedAuthorisation.ExpiresIn</dd>
                </dl>
            }
        </p>
    </div>
    <div class="card-footer">
        <small class="text-muted">@Model.Messages</small>
    </div>
</div>

<div id="modal-par" class="modal" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Par</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="modal-messages"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="modal-registration" class="modal" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Registration</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="modal-messages-registration"></div>
                <pre id="modal-payload-registration"></pre>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        jQuery(document).ready(function($) {

            $('#arrdetail').show();
            $('#registration-spinner').hide();
                        
            // handle the view registration click
            $('#ViewRegistration').click(function () {

                var modal = new bootstrap.Modal(document.getElementById('modal-registration'), {
                    keyboard: false
                });

                // Get the registration - display in modal view
                var registrationId = $('#RegistrationId option:selected').val();
                if (registrationId !== null && registrationId !== '') {

                    $('#registration-spinner').show();
                    $('#registrationid-validation-message').hide();
                    var registrationId = $('#RegistrationId option:selected').val();
                    const [clientid, dataHolderBrandId] = registrationId.split('|||');
                    var href = `dcr/registrations/${clientid}/${dataHolderBrandId}`;

                    $.ajax({
                        url: href,
                        type: 'GET',
                        success: function (result) {
                            modal.show();
                            $('#modal-messages-registration').html(result.messages);
                            var obj = JSON.parse(result.payload);
                            $('#modal-payload-registration').html(JSON.stringify(obj, null, 2));
                            $('#registration-spinner').hide();
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            modal.show();
                            $('#modal-messages-registration').html(xhr.responseJSON.messages);
                            $('#registration-spinner').hide();
                        }
                    });
                }
                else {
                    $('#registrationid-validation-message').show();
                    $('[data-valmsg-for="RegistrationId"]').html("Please select a registration");
                }
                return false;
            });

            //setting callback function for 'hidden.bs.modal' event
            $('#modal-registration').on('hidden.bs.modal', function () {
                //remove the backdrop
                $('.modal-backdrop').remove();
            })

            // Populate the view with the picked details
			$('#RegistrationId').click(function () {
                
                var modal = new bootstrap.Modal(document.getElementById('modal-par'), {
                    keyboard: false
                });
				var registrationId = $('#RegistrationId option:selected').val();
				if (registrationId !== null && registrationId !== '') {
                    $('#registrationid-validation-message').hide();
                    $.ajax({
                        url: '/par/registration/detail',
                        type: 'POST',
                        data: {
							registrationId: registrationId
                        },
                        success: function (result) {
                            if (result.message !== '') {
                                modal.show();
                                $('#modal-messages').html(result.message);
                            } else {
                                $('#Scope').val(result.scope);

                                var $select = $("#CdrArrangementId");
                                $select.html('<option value="">Create new arrangement</option>');

                                if (result.arrangements.length > 0) {
                                    $.each(result.arrangements, function (i, item) {
                                        $("<option>", { value: item.value }).html("Update arrangement: " + item.text).appendTo($select);
                                    });
                                }
                            }
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            modal.show();
                            $('#modal-messages').html('error');
                        }
                    });
                }
                return false;
            });

            setSidebarMenuItem('par');
        });
    </script>
}
